{
  "id": "578",
  "name": "EJB Bad Practices: Use of Class Loader",
  "abstraction": "Variant",
  "structure": "Simple",
  "status": "Draft",
  "description": "The product violates the Enterprise JavaBeans (EJB) specification by using the class loader.",
  "extended_description": "The Enterprise JavaBeans specification requires that every bean provider follow a set of programming guidelines designed to ensure that the bean will be portable and behave consistently in any EJB container. In this case, the product violates the following EJB guideline: \"The enterprise bean must not attempt to create a class loader; obtain the current class loader; set the context class loader; set security manager; create a new security manager; stop the JVM; or change the input, output, and error streams.\" The specification justifies this requirement in the following way: \"These functions are reserved for the EJB container. Allowing the enterprise bean to use these functions could compromise security and decrease the container's ability to properly manage the runtime environment.\"",
  "related_weaknesses": [
    {
      "nature": "ChildOf",
      "cweid": "573",
      "view_id": "1000",
      "ordinal": "Primary"
    }
  ],
  "applicable_platforms": {
    "language": [
      {
        "prevalence": "Undetermined",
        "name": "Java"
      }
    ]
  },
  "modes_of_introduction": [
    {
      "phase": "Implementation"
    }
  ],
  "common_consequences": [
    {
      "scope": [
        "Confidentiality",
        "Integrity",
        "Availability",
        "Other"
      ],
      "impact": [
        "Execute Unauthorized Code or Commands",
        "Varies by Context"
      ]
    }
  ],
  "potential_mitigations": [
    {
      "phase": [
        "Architecture and Design",
        "Implementation"
      ],
      "description": [
        "Do not use the Class Loader when writing EJBs."
      ]
    }
  ],
  "demonstrative_examples": [
    {
      "text": "\n               <Intro_Text>The following Java example is a simple stateless Enterprise JavaBean that retrieves the interest rate for the number of points for a mortgage. The interest rates for various points are retrieved from an XML document on the local file system, and the EJB uses the Class Loader for the EJB class to obtain the XML document from the local file system as an input stream.</Intro_Text>\n               <Example_Code Nature=\"Bad\" Language=\"Java\">\n                  <xhtml:div>@Stateless<xhtml:br/>public class InterestRateBean implements InterestRateRemote {<xhtml:br/>\n                     <xhtml:div style=\"margin-left:1em;\">\n                        <xhtml:div>private Document interestRateXMLDocument = null;<xhtml:br/>\n                           <xhtml:br/>public InterestRateBean() {<xhtml:div style=\"margin-left:1em;\">\n                              <xhtml:div>try {<xhtml:div style=\"margin-left:1em;\">\n                                    <xhtml:div>\n                                       <xhtml:br/>\n                                       <xhtml:i>// get XML document from the local filesystem as an input stream</xhtml:i>\n                                       <xhtml:br/>\n                                       <xhtml:br/>\n                                       <xhtml:i>// using the ClassLoader for this class</xhtml:i>\n                                       <xhtml:br/>ClassLoader loader = this.getClass().getClassLoader();<xhtml:br/>InputStream in = loader.getResourceAsStream(Constants.INTEREST_RATE_FILE);</xhtml:div>\n                                 </xhtml:div>\n                              </xhtml:div>\n                           </xhtml:div>\n                           <xhtml:br/>\n                           <xhtml:br/>DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();<xhtml:div style=\"margin-left:1em;\">DocumentBuilder db = dbf.newDocumentBuilder();<xhtml:br/>interestRateXMLDocument = db.parse(interestRateFile);</xhtml:div>} catch (IOException ex) {...}</xhtml:div>\n                     </xhtml:div>}<xhtml:br/>\n                     <xhtml:div style=\"margin-left:1em;\">\n                        <xhtml:div>public BigDecimal getInterestRate(Integer points) {<xhtml:div style=\"margin-left:1em;\">return getInterestRateFromXML(points);</xhtml:div>}<xhtml:br/>\n                           <xhtml:br/>\n                           <xhtml:i>/* member function to retrieve interest rate from XML document on the local file system */</xhtml:i>\n                           <xhtml:br/>\n                           <xhtml:br/>private BigDecimal getInterestRateFromXML(Integer points) {...}</xhtml:div>\n                     </xhtml:div>}</xhtml:div>\n               </Example_Code>\n               <Body_Text>This use of the Java Class Loader class within any kind of Enterprise JavaBean violates the restriction of the EJB specification against obtaining the current class loader as this could compromise the security of the application using the EJB.</Body_Text>\n            "
    },
    {
      "text": "\n               <Intro_Text>An EJB is also restricted from creating a custom class loader and creating a class and instance of a class from the class loader, as shown in the following example.</Intro_Text>\n               <Example_Code Nature=\"Bad\" Language=\"Java\">\n                  <xhtml:div>@Stateless<xhtml:br/>public class LoaderSessionBean implements LoaderSessionRemote {<xhtml:br/>\n                     <xhtml:div style=\"margin-left:1em;\">\n                        <xhtml:div>public LoaderSessionBean() {<xhtml:div style=\"margin-left:1em;\">try {<xhtml:div style=\"margin-left:1em;\">ClassLoader loader = new CustomClassLoader();<xhtml:br/>Class c = loader.loadClass(\"someClass\");<xhtml:br/>Object obj = c.newInstance();<xhtml:br/>/* perform some task that uses the new class instance member variables or functions */<xhtml:br/>...</xhtml:div>} catch (Exception ex) {...}</xhtml:div>}<xhtml:br/>\n                           <xhtml:br/>public class CustomClassLoader extends ClassLoader {<xhtml:br/>\n                           <xhtml:br/>}</xhtml:div>\n                     </xhtml:div>}</xhtml:div>\n               </Example_Code>\n            "
    }
  ],
  "content_history": {
    "submission": {
      "submission_name": "CWE Community",
      "submission_date": "2006-12-15",
      "submission_comment": "Submitted by members of the CWE community to extend early CWE versions"
    },
    "modification": [
      {
        "modification_name": "Eric Dalci",
        "modification_organization": "Cigital",
        "modification_date": "2008-07-01",
        "modification_comment": "updated Potential_Mitigations, Time_of_Introduction"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2008-09-08",
        "modification_comment": "updated Relationships, Other_Notes"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2009-10-29",
        "modification_comment": "updated Description, Other_Notes"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2009-12-28",
        "modification_comment": "updated Demonstrative_Examples, Potential_Mitigations"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2011-06-01",
        "modification_comment": "updated Common_Consequences"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2011-06-27",
        "modification_comment": "updated Common_Consequences"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2012-05-11",
        "modification_comment": "updated Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2014-07-30",
        "modification_comment": "updated Relationships, Taxonomy_Mappings"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2020-02-24",
        "modification_comment": "updated Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2023-01-31",
        "modification_comment": "updated Description"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2023-04-27",
        "modification_comment": "updated Relationships, Time_of_Introduction"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2023-06-29",
        "modification_comment": "updated Mapping_Notes"
      }
    ]
  },
  "taxonomy_mappings": [
    {
      "taxonomy_name": "Software Fault Patterns",
      "entry_name": "Use of an improper API",
      "entry_id": "SFP3"
    }
  ]
}
