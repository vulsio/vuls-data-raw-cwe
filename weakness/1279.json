{
  "id": "1279",
  "name": "Cryptographic Operations are run Before Supporting Units are Ready",
  "abstraction": "Base",
  "structure": "Simple",
  "status": "Incomplete",
  "description": "Performing cryptographic operations without ensuring that the supporting inputs are ready to supply valid data may compromise the cryptographic result.",
  "extended_description": "Many cryptographic hardware units depend upon other hardware units to supply information to them to produce a securely encrypted result. For example, a cryptographic unit that depends on an external random-number-generator (RNG) unit for entropy must wait until the RNG unit is producing random numbers. If a cryptographic unit retrieves a private encryption key from a fuse unit, the fuse unit must be up and running before a key may be supplied.\n\t\t\t",
  "related_weaknesses": [
    {
      "nature": "ChildOf",
      "cweid": "691",
      "view_id": "1000",
      "ordinal": "Primary"
    },
    {
      "nature": "ChildOf",
      "cweid": "665",
      "view_id": "1000"
    }
  ],
  "applicable_platforms": {
    "language": [
      {
        "prevalence": "Undetermined",
        "name": "Verilog"
      },
      {
        "prevalence": "Undetermined",
        "name": "VHDL"
      },
      {
        "class": "Not Language-Specific",
        "prevalence": "Undetermined"
      }
    ],
    "technology": [
      {
        "prevalence": "Undetermined",
        "name": "Processor Hardware"
      },
      {
        "class": "Not Technology-Specific",
        "prevalence": "Undetermined"
      }
    ],
    "operating_system": [
      {
        "class": "Not OS-Specific",
        "prevalence": "Undetermined"
      }
    ],
    "architecture": [
      {
        "class": "Not Architecture-Specific",
        "prevalence": "Undetermined"
      }
    ]
  },
  "modes_of_introduction": [
    {
      "phase": "Architecture and Design"
    },
    {
      "phase": "Implementation",
      "note": [
        "The decision to continue using a cryptographic unit even though the input units to it are not producing valid data will compromise the encrypted result."
      ]
    }
  ],
  "common_consequences": [
    {
      "scope": [
        "Access Control",
        "Confidentiality",
        "Integrity",
        "Availability",
        "Accountability",
        "Authentication",
        "Authorization",
        "Non-Repudiation"
      ],
      "impact": [
        "Varies by Context"
      ]
    }
  ],
  "potential_mitigations": [
    {
      "phase": [
        "Architecture and Design"
      ],
      "description": [
        "Best practices should be used to design cryptographic systems."
      ]
    },
    {
      "phase": [
        "Implementation"
      ],
      "description": [
        "Continuously ensuring that cryptographic inputs are supplying valid information is necessary to ensure that the encrypted output is secure. "
      ]
    }
  ],
  "demonstrative_examples": [
    {
      "text": "\n\t\t\t\t\t<Intro_Text>The following pseudocode illustrates the weak encryption resulting from the use of a pseudo-random-number generator output. </Intro_Text>\n\t\t\t\t\t<Example_Code Nature=\"Bad\" Language=\"Pseudocode\">\n\t\t\t\t\t  If random_number_generator_self_test_passed() == TRUE<xhtml:br/>\n\t\t\t\t\t  then Seed = get_random_number_from_RNG()<xhtml:br/>\n\t\t\t\t\t  else Seed = hardcoded_number<xhtml:br/>\n\t\t\t\t\t\n\t\t\t\t\t</Example_Code>\n\t\t\t\t\t<Body_Text>In the example above, first a check of RNG ready is performed. If the check fails, the RNG is ignored and a hard coded value is used instead. The hard coded value severely weakens the encrypted output. </Body_Text>\n\t\t\t\t\t<Example_Code Nature=\"Good\" Language=\"Pseudocode\">\n\t\t\t\t\t  If random_number_generator_self_test_passed() == TRUE<xhtml:br/>\n\t\t\t\t\t  then Seed = get_random_number_from_RNG()<xhtml:br/>\n\t\t\t\t\t  else enter_error_state()<xhtml:br/>\n\t\t\t\t\t</Example_Code>\n\t\t\t\t"
    }
  ],
  "content_history": {
    "submission": {
      "submission_name": "Arun Kanuparthi, Hareesh Khattri, Parbati Kumar Manna, Narasimha Kumar V Mangipudi",
      "submission_organization": "Intel Corporation",
      "submission_date": "2020-02-12"
    },
    "modification": [
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2020-08-20",
        "modification_comment": "updated Common_Consequences, Demonstrative_Examples, Description, Maintenance_Notes, Modes_of_Introduction, Name, Potential_Mitigations, Related_Attack_Patterns"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2021-03-15",
        "modification_comment": "updated Maintenance_Notes"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2022-04-28",
        "modification_comment": "updated Applicable_Platforms"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2022-06-28",
        "modification_comment": "updated Applicable_Platforms"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2022-10-13",
        "modification_comment": "updated Demonstrative_Examples"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2023-04-27",
        "modification_comment": "updated Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2023-06-29",
        "modification_comment": "updated Mapping_Notes"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2023-10-26",
        "modification_comment": "updated Relationships"
      }
    ],
    "previous_entry_name": [
      {
        "text": "Cryptographic Primitives used without Successful Self-Test",
        "date": "2020-08-20"
      }
    ]
  },
  "related_attack_patterns": [
    "97"
  ]
}
