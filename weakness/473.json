{
  "id": "473",
  "name": "PHP External Variable Modification",
  "abstraction": "Variant",
  "structure": "Simple",
  "status": "Draft",
  "description": "A PHP application does not properly protect against the modification of variables from external sources, such as query parameters or cookies. This can expose the application to numerous weaknesses that would not exist otherwise.",
  "related_weaknesses": [
    {
      "nature": "ChildOf",
      "cweid": "471",
      "view_id": "1000",
      "ordinal": "Primary"
    },
    {
      "nature": "CanPrecede",
      "cweid": "98",
      "view_id": "1000"
    }
  ],
  "applicable_platforms": {
    "language": [
      {
        "prevalence": "Undetermined",
        "name": "PHP"
      }
    ]
  },
  "modes_of_introduction": [
    {
      "phase": "Implementation",
      "note": [
        "REALIZATION: This weakness is caused during implementation of an architectural security tactic."
      ]
    }
  ],
  "common_consequences": [
    {
      "scope": [
        "Integrity"
      ],
      "impact": [
        "Modify Application Data"
      ]
    }
  ],
  "potential_mitigations": [
    {
      "phase": [
        "Requirements",
        "Implementation"
      ],
      "description": [
        "Carefully identify which variables can be controlled or influenced by an external user, and consider adopting a naming convention to emphasize when externally modifiable variables are being used. An application should be reluctant to trust variables that have been initialized outside of its trust boundary. Ensure adequate checking is performed when relying on input from outside a trust boundary. Do not allow your application to run with register_globals enabled. If you implement a register_globals emulator, be extremely careful of variable extraction, dynamic evaluation, and similar issues, since weaknesses in your emulation could allow external variable modification to take place even without register_globals."
      ]
    }
  ],
  "observed_examples": [
    {
      "reference": "CVE-2000-0860",
      "description": "File upload allows arbitrary file read by setting hidden form variables to match internal variable names.",
      "link": "https://www.cve.org/CVERecord?id=CVE-2000-0860"
    },
    {
      "reference": "CVE-2001-0854",
      "description": "Mistakenly trusts $PHP_SELF variable to determine if include script was called by its parent.",
      "link": "https://www.cve.org/CVERecord?id=CVE-2001-0854"
    },
    {
      "reference": "CVE-2002-0764",
      "description": "PHP remote file inclusion by modified assumed-immutable variable.",
      "link": "https://www.cve.org/CVERecord?id=CVE-2002-0764"
    },
    {
      "reference": "CVE-2001-1025",
      "description": "Modify key variable when calling scripts that don't load a library that initializes it.",
      "link": "https://www.cve.org/CVERecord?id=CVE-2001-1025"
    },
    {
      "reference": "CVE-2003-0754",
      "description": "Authentication bypass by modifying array used for authentication.",
      "link": "https://www.cve.org/CVERecord?id=CVE-2003-0754"
    }
  ],
  "content_history": {
    "submission": {
      "submission_name": "PLOVER",
      "submission_date": "2006-07-19"
    },
    "modification": [
      {
        "modification_name": "Eric Dalci",
        "modification_organization": "Cigital",
        "modification_date": "2008-07-01",
        "modification_comment": "updated Time_of_Introduction"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2008-09-08",
        "modification_comment": "updated Relationships, Other_Notes, Taxonomy_Mappings"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2009-12-28",
        "modification_comment": "updated Other_Notes, Relationship_Notes"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2010-02-16",
        "modification_comment": "updated Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2011-06-01",
        "modification_comment": "updated Common_Consequences"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2012-05-11",
        "modification_comment": "updated Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2012-10-30",
        "modification_comment": "updated Potential_Mitigations"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2014-07-30",
        "modification_comment": "updated Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2017-11-08",
        "modification_comment": "updated Modes_of_Introduction, Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2020-02-24",
        "modification_comment": "updated Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2023-04-27",
        "modification_comment": "updated Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2023-06-29",
        "modification_comment": "updated Mapping_Notes"
      }
    ]
  },
  "taxonomy_mappings": [
    {
      "taxonomy_name": "PLOVER",
      "entry_name": "PHP External Variable Modification"
    }
  ],
  "related_attack_patterns": [
    "77"
  ],
  "notes": [
    {
      "type": "Relationship",
      "text": "This is a language-specific instance of Modification of Assumed-Immutable Data (MAID). This can be resultant from direct request (alternate path) issues. It can be primary to weaknesses such as PHP file inclusion, SQL injection, XSS, authentication bypass, and others."
    }
  ]
}
