{
  "id": "455",
  "name": "Non-exit on Failed Initialization",
  "abstraction": "Base",
  "structure": "Simple",
  "status": "Draft",
  "description": "The product does not exit or otherwise modify its operation when security-relevant errors occur during initialization, such as when a configuration file has a format error or a hardware security module (HSM) cannot be activated, which can cause the product to execute in a less secure fashion than intended by the administrator.",
  "related_weaknesses": [
    {
      "nature": "ChildOf",
      "cweid": "665",
      "view_id": "1000"
    },
    {
      "nature": "ChildOf",
      "cweid": "705",
      "view_id": "1000",
      "ordinal": "Primary"
    },
    {
      "nature": "ChildOf",
      "cweid": "636",
      "view_id": "1000"
    }
  ],
  "applicable_platforms": {
    "language": [
      {
        "class": "Not Language-Specific",
        "prevalence": "Undetermined"
      }
    ]
  },
  "modes_of_introduction": [
    {
      "phase": "Implementation"
    }
  ],
  "common_consequences": [
    {
      "scope": [
        "Integrity",
        "Other"
      ],
      "impact": [
        "Modify Application Data",
        "Alter Execution Logic"
      ],
      "note": "The application could be placed in an insecure state that may allow an attacker to modify sensitive data or allow unintended logic to be executed."
    }
  ],
  "potential_mitigations": [
    {
      "phase": [
        "Implementation"
      ],
      "description": [
        "Follow the principle of failing securely when an error occurs. The system should enter a state where it is not vulnerable and will not display sensitive error messages to a potential attacker."
      ]
    }
  ],
  "demonstrative_examples": [
    {
      "demonstrative_example_id": "DX-54",
      "text": "\n               <Intro_Text>The following code intends to limit certain operations to the administrator only.</Intro_Text>\n               <Example_Code Nature=\"Bad\" Language=\"Perl\">\n                  <xhtml:div>$username = GetCurrentUser();<xhtml:br/>$state = GetStateData($username);<xhtml:br/>if (defined($state)) {<xhtml:div style=\"margin-left:1em;\">$uid = ExtractUserID($state);</xhtml:div>}<xhtml:br/>\n                     <xhtml:br/>\n                     <xhtml:i># do stuff</xhtml:i>\n                     <xhtml:br/>if ($uid == 0) {<xhtml:div style=\"margin-left:1em;\">DoAdminThings();</xhtml:div>}</xhtml:div>\n               </Example_Code>\n               <Body_Text>If the application is unable to extract the state information - say, due to a database timeout - then the $uid variable will not be explicitly set by the programmer. This will cause $uid to be regarded as equivalent to \"0\" in the conditional, allowing the original user to perform administrator actions. Even if the attacker cannot directly influence the state data, unexpected errors could cause incorrect privileges to be assigned to a user just by accident.</Body_Text>\n            "
    }
  ],
  "observed_examples": [
    {
      "reference": "CVE-2005-1345",
      "description": "Product does not trigger a fatal error if missing or invalid ACLs are in a configuration file.",
      "link": "https://www.cve.org/CVERecord?id=CVE-2005-1345"
    }
  ],
  "content_history": {
    "submission": {
      "submission_name": "PLOVER",
      "submission_date": "2006-07-19"
    },
    "modification": [
      {
        "modification_name": "Eric Dalci",
        "modification_organization": "Cigital",
        "modification_date": "2008-07-01",
        "modification_comment": "updated Time_of_Introduction"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2008-09-08",
        "modification_comment": "updated Relationships, Taxonomy_Mappings"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2011-06-01",
        "modification_comment": "updated Common_Consequences"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2012-05-11",
        "modification_comment": "updated Common_Consequences, Demonstrative_Examples, Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2012-10-30",
        "modification_comment": "updated Potential_Mitigations"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2014-07-30",
        "modification_comment": "updated Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2017-11-08",
        "modification_comment": "updated Applicable_Platforms"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2023-01-31",
        "modification_comment": "updated Description"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2023-04-27",
        "modification_comment": "updated Relationships, Time_of_Introduction"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2023-06-29",
        "modification_comment": "updated Mapping_Notes"
      }
    ]
  },
  "taxonomy_mappings": [
    {
      "taxonomy_name": "PLOVER",
      "entry_name": "Non-exit on Failed Initialization"
    }
  ],
  "notes": [
    {
      "type": "Research Gap",
      "text": "Under-studied. These issues are not frequently reported, and it is difficult to find published examples."
    }
  ]
}
