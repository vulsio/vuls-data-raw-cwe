{
  "id": "1188",
  "name": "Initialization of a Resource with an Insecure Default",
  "abstraction": "Base",
  "structure": "Simple",
  "status": "Incomplete",
  "description": "The product initializes or sets a resource with a default that is intended to be changed by the administrator, but the default is not secure.",
  "extended_description": "<xhtml:p>Developers often choose default values that leave the product as open and easy to use as possible out-of-the-box, under the assumption that the administrator can (or should) change the default value.  However, this ease-of-use comes at a cost when the default is insecure and the administrator does not change it.</xhtml:p>\n\t ",
  "related_weaknesses": [
    {
      "nature": "ChildOf",
      "cweid": "1419",
      "view_id": "1000",
      "ordinal": "Primary"
    },
    {
      "nature": "ChildOf",
      "cweid": "665",
      "view_id": "1003",
      "ordinal": "Primary"
    }
  ],
  "applicable_platforms": {},
  "demonstrative_examples": [
    {
      "demonstrative_example_id": "DX-163",
      "text": "\n\t\t\t\t<Intro_Text>This code attempts to login a user using credentials from a POST request:</Intro_Text>\n\t\t\t\t<Example_Code Nature=\"Bad\" Language=\"PHP\">\n                  <xhtml:div>\n                    <xhtml:br/>\n                    <xhtml:i>// $user and $pass automatically set from POST request</xhtml:i>\n                    <xhtml:br/>if (login_user($user,$pass)) {<xhtml:div style=\"margin-left:1em;\">$authorized = true;</xhtml:div>}<xhtml:br/>\n                    <xhtml:i>...</xhtml:i>\n                    <xhtml:br/>\n                  <xhtml:br/>if ($authorized) {<xhtml:div style=\"margin-left:1em;\">generatePage();</xhtml:div>}</xhtml:div>\n\t\t\t\t</Example_Code>\n\t\t\t\t<Body_Text>Because the $authorized variable is never initialized, PHP will automatically set $authorized to any value included in the POST request if register_globals is enabled. An attacker can send a POST request with an unexpected third value 'authorized' set to 'true' and gain authorized status without supplying valid credentials.</Body_Text>\n\t\t\t\t<Body_Text>Here is a fixed version:</Body_Text>\n\t\t\t\t<Example_Code Nature=\"Bad\" Language=\"PHP\">\n                  <xhtml:div>$user = $_POST['user'];<xhtml:br/>$pass = $_POST['pass'];<xhtml:br/>$authorized = false;<xhtml:br/>if (login_user($user,$pass)) {<xhtml:div style=\"margin-left:1em;\">$authorized = true;</xhtml:div>}<xhtml:br/>\n                  <xhtml:i>...</xhtml:i>\n                  <xhtml:br/>\n                  </xhtml:div>\n\t\t\t\t</Example_Code>\n\t\t\t\t<Body_Text>This code avoids the issue by initializing the $authorized variable to false and explicitly retrieving the login credentials from the $_POST variable. Regardless, register_globals should never be enabled and is disabled by default in current versions of PHP.</Body_Text>\n              "
    }
  ],
  "observed_examples": [
    {
      "reference": "CVE-2022-36349",
      "description": "insecure default variable initialization in BIOS firmware for a hardware board allows DoS",
      "link": "https://www.cve.org/CVERecord?id=CVE-2022-36349"
    },
    {
      "reference": "CVE-2022-42467",
      "description": "A generic database browser interface has a default mode that exposes a web server to the network, allowing queries to the database.",
      "link": "https://www.cve.org/CVERecord?id=CVE-2022-42467"
    }
  ],
  "content_history": {
    "submission": {
      "submission_name": "CWE Content Team",
      "submission_organization": "MITRE",
      "submission_date": "2019-03-25"
    },
    "modification": [
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2020-02-24",
        "modification_comment": "updated Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2021-07-20",
        "modification_comment": "updated Related_Attack_Patterns"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2023-01-31",
        "modification_comment": "updated Description"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2023-04-27",
        "modification_comment": "updated Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2023-06-29",
        "modification_comment": "updated Mapping_Notes"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2023-10-26",
        "modification_comment": "updated Demonstrative_Examples, Name, Observed_Examples, Relationships"
      }
    ],
    "previous_entry_name": [
      {
        "text": "Insecure Default Initialization of Resource",
        "date": "2023-10-26"
      }
    ]
  },
  "weakness_ordinalities": [
    {
      "ordinality": "Primary"
    }
  ],
  "related_attack_patterns": [
    "665"
  ],
  "notes": [
    {
      "type": "Maintenance",
      "text": "This entry improves organization of concepts under initialization.  The typical CWE model is to cover \"Missing\" and \"Incorrect\" behaviors.  Arguably, this entry could be named as \"Incorrect\" instead of \"Insecure.\"  This might be changed in the near future."
    }
  ]
}
