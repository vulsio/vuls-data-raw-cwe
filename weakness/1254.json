{
	"id": "1254",
	"name": "Incorrect Comparison Logic Granularity",
	"abstraction": "Base",
	"structure": "Simple",
	"status": "Draft",
	"description": "The product's comparison logic is performed over a series of steps rather than across the entire string in one operation. If there is a comparison logic failure on one of these steps, the operation may be vulnerable to a timing attack that can result in the interception of the process for nefarious purposes.",
	"extended_description": "\n            <xhtml:p>Comparison logic is used to compare a variety of objects including passwords, Message \n         Authentication Codes (MACs), and responses to verification challenges. When comparison logic is \n         implemented at a finer granularity (e.g., byte-by-byte comparison) and breaks in the case of a \n         comparison failure, an attacker can exploit this implementation to identify when exactly \n         the failure occurred. With multiple attempts, the attacker may be able to guesses the correct \n         password/response to challenge and elevate their privileges.</xhtml:p>\n         ",
	"related_weaknesses": [
		{
			"nature": "ChildOf",
			"cweid": "208",
			"view_id": "1000",
			"ordinal": "Primary"
		},
		{
			"nature": "ChildOf",
			"cweid": "697",
			"view_id": "1000"
		}
	],
	"applicable_platforms": {
		"language": [
			{
				"class": "Not Language-Specific",
				"prevalence": "Undetermined"
			}
		],
		"technology": [
			{
				"class": "Not Technology-Specific",
				"prevalence": "Undetermined"
			}
		],
		"operating_system": [
			{
				"class": "Not OS-Specific",
				"prevalence": "Undetermined"
			}
		],
		"architecture": [
			{
				"class": "Not Architecture-Specific",
				"prevalence": "Undetermined"
			}
		]
	},
	"modes_of_introduction": [
		{
			"phase": "Architecture and Design"
		},
		{
			"phase": "Implementation"
		}
	],
	"common_consequences": [
		{
			"scope": [
				"Confidentiality",
				"Authorization"
			],
			"impact": [
				"Bypass Protection Mechanism"
			]
		}
	],
	"potential_mitigations": [
		{
			"phase": [
				"Implementation"
			],
			"description": [
				"\n                 <xhtml:p>The hardware designer should ensure that comparison logic is implemented so as to compare in one operation instead in smaller chunks.</xhtml:p>\n               "
			]
		}
	],
	"observed_examples": [
		{
			"reference": "CVE-2019-10482",
			"description": "Smartphone OS uses comparison functions that are not in constant time, allowing side channels",
			"link": "https://www.cve.org/CVERecord?id=CVE-2019-10482"
		},
		{
			"reference": "CVE-2019-10071",
			"description": "Java-oriented framework compares HMAC signatures  using  String.equals() instead of a constant-time algorithm, causing timing discrepancies",
			"link": "https://www.cve.org/CVERecord?id=CVE-2019-10071"
		},
		{
			"reference": "CVE-2014-0984",
			"description": "Password-checking function in router terminates validation of a password entry when it encounters the first incorrect character, which allows remote attackers to obtain passwords via a brute-force attack that relies on timing differences in responses to incorrect password guesses, aka a timing side-channel attack.",
			"link": "https://www.cve.org/CVERecord?id=CVE-2014-0984"
		}
	],
	"references": [
		{
			"reference_id": "REF-1079",
			"author": [
				"Joe Fitzpatrick"
			],
			"title": "SCA4n00bz - Timing-based Sidechannel Attacks for Hardware N00bz workshop",
			"url": "https://github.com/securelyfitz/SCA4n00bz"
		}
	],
	"content_history": {
		"submission": {
			"submission_name": "Arun Kanuparthi, Hareesh Khattri, Parbati Kumar Manna, Narasimha Kumar V Mangipudi",
			"submission_organization": "Intel Corporation",
			"submission_date": "2020-02-12"
		},
		"modification": [
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2020-08-20",
				"modification_comment": "updated Relationships"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2021-07-20",
				"modification_comment": "updated Related_Attack_Patterns"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2022-10-13",
				"modification_comment": "updated Demonstrative_Examples"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2023-04-27",
				"modification_comment": "updated Observed_Examples, Relationships"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2023-06-29",
				"modification_comment": "updated Mapping_Notes"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2023-10-26",
				"modification_comment": "updated Demonstrative_Examples, Observed_Examples"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2024-11-19",
				"modification_comment": "updated Demonstrative_Examples, Maintenance_Notes"
			}
		],
		"contribution": [
			{
				"type": "Feedback",
				"contribution_name": "Anders Nordstrom",
				"contribution_organization": "Cycuity Inc.",
				"contribution_date": "2024-01-09",
				"contribution_comment": "reported problems with the Verilog demonstrative example, leading to its removal from this entry"
			}
		]
	},
	"related_attack_patterns": [
		"26"
	],
	"notes": [
		{
			"type": "Maintenance",
			"text": "CWE 4.16 removed a demonstrative example for a hardware module because it was inaccurate and unable to be adapted. The CWE team is developing an alternative."
		}
	]
}
