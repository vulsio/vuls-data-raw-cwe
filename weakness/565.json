{
	"id": "565",
	"name": "Reliance on Cookies without Validation and Integrity Checking",
	"abstraction": "Base",
	"structure": "Simple",
	"status": "Incomplete",
	"description": "The product relies on the existence or values of cookies when performing security-critical operations, but it does not properly ensure that the setting is valid for the associated user.",
	"extended_description": "Attackers can easily modify cookies, within the browser or by implementing the client-side code outside of the browser. Reliance on cookies without detailed validation and integrity checking can allow attackers to bypass authentication, conduct injection attacks such as SQL injection and cross-site scripting, or otherwise modify inputs in unexpected ways.",
	"related_weaknesses": [
		{
			"nature": "ChildOf",
			"cweid": "642",
			"view_id": "1000",
			"ordinal": "Primary"
		},
		{
			"nature": "ChildOf",
			"cweid": "669",
			"view_id": "1003",
			"ordinal": "Primary"
		},
		{
			"nature": "ChildOf",
			"cweid": "602",
			"view_id": "1000"
		}
	],
	"applicable_platforms": {},
	"modes_of_introduction": [
		{
			"phase": "Architecture and Design",
			"note": [
				"OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase."
			]
		},
		{
			"phase": "Implementation"
		}
	],
	"common_consequences": [
		{
			"scope": [
				"Access Control"
			],
			"impact": [
				"Gain Privileges or Assume Identity"
			],
			"note": "It is dangerous to use cookies to set a user's privileges. The cookie can be manipulated to escalate an attacker's privileges to an administrative level."
		}
	],
	"potential_mitigations": [
		{
			"phase": [
				"Architecture and Design"
			],
			"description": [
				"Avoid using cookie data for a security-related decision."
			]
		},
		{
			"phase": [
				"Implementation"
			],
			"description": [
				"Perform thorough input validation (i.e.: server side validation) on the cookie data if you're going to use it for a security related decision."
			]
		},
		{
			"phase": [
				"Architecture and Design"
			],
			"description": [
				"Add integrity checks to detect tampering."
			]
		},
		{
			"phase": [
				"Architecture and Design"
			],
			"description": [
				"Protect critical cookies from replay attacks, since cross-site scripting or other attacks may allow attackers to steal a strongly-encrypted cookie that also passes integrity checks. This mitigation applies to cookies that should only be valid during a single transaction or session. By enforcing timeouts, you may limit the scope of an attack. As part of your integrity check, use an unpredictable, server-side value that is not exposed to the client."
			]
		}
	],
	"demonstrative_examples": [
		{
			"demonstrative_example_id": "DX-61",
			"text": "\n               <Intro_Text>The following code excerpt reads a value from a browser cookie to determine the role of the user.</Intro_Text>\n               <Example_Code Nature=\"Bad\" Language=\"Java\">\n                  <xhtml:div>Cookie[] cookies = request.getCookies();<xhtml:br/>for (int i =0; i&lt; cookies.length; i++) {<xhtml:div style=\"margin-left:1em;\">Cookie c = cookies[i];<xhtml:br/>if (c.getName().equals(\"role\")) {<xhtml:div style=\"margin-left:1em;\">userRole = c.getValue();</xhtml:div>}</xhtml:div>}</xhtml:div>\n               </Example_Code>\n               <Body_Text>It is easy for an attacker to modify the \"role\" value found in the locally stored cookie, allowing privilege escalation.</Body_Text>\n            "
		}
	],
	"observed_examples": [
		{
			"reference": "CVE-2008-5784",
			"description": "e-dating application allows admin privileges by setting the admin cookie to 1.",
			"link": "https://www.cve.org/CVERecord?id=CVE-2008-5784"
		}
	],
	"content_history": {
		"submission": {
			"submission_name": "Anonymous Tool Vendor (under NDA)",
			"submission_date": "2006-07-19"
		},
		"modification": [
			{
				"modification_name": "Sean Eidemiller",
				"modification_organization": "Cigital",
				"modification_date": "2008-07-01",
				"modification_comment": "added/updated demonstrative examples"
			},
			{
				"modification_name": "Eric Dalci",
				"modification_organization": "Cigital",
				"modification_date": "2008-07-01",
				"modification_comment": "updated Potential_Mitigations, Time_of_Introduction"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2008-09-08",
				"modification_comment": "updated Relationships, Other_Notes, Taxonomy_Mappings"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2009-01-12",
				"modification_comment": "updated Common_Consequences, Description, Other_Notes, Potential_Mitigations, Relationships"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2009-07-16",
				"modification_comment": "Clarified name and description; broadened the definition to include any security-critical operation, not just security decisions, to allow for relationships with injection weaknesses.",
				"modification_importance": "Critical"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2009-07-27",
				"modification_comment": "updated Description, Name, Potential_Mitigations, Relationship_Notes, Relationships, Taxonomy_Mappings"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2009-10-29",
				"modification_comment": "updated Relationships"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2011-06-01",
				"modification_comment": "updated Common_Consequences"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2012-05-11",
				"modification_comment": "updated Demonstrative_Examples, Relationships"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2014-07-30",
				"modification_comment": "updated Relationships, Taxonomy_Mappings"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2017-11-08",
				"modification_comment": "updated Modes_of_Introduction, Relationships"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2019-06-20",
				"modification_comment": "updated Related_Attack_Patterns, Relationships"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2020-02-24",
				"modification_comment": "updated Relationships"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2021-10-28",
				"modification_comment": "updated Relationships"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2023-01-31",
				"modification_comment": "updated Description"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2023-04-27",
				"modification_comment": "updated Detection_Factors, Relationships"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2023-06-29",
				"modification_comment": "updated Mapping_Notes"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2023-10-26",
				"modification_comment": "updated Observed_Examples"
			}
		],
		"previous_entry_name": [
			{
				"text": "Use of Cookies",
				"date": "2008-04-11"
			},
			{
				"text": "Use of Cookies in Security Decision",
				"date": "2009-07-27"
			}
		]
	},
	"detection_methods": [
		{
			"detection_method_id": "DM-14",
			"method": "Automated Static Analysis",
			"description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
			"effectiveness": "High"
		}
	],
	"taxonomy_mappings": [
		{
			"taxonomy_name": "Software Fault Patterns",
			"entry_name": "Faulty endpoint authentication",
			"entry_id": "SFP29"
		}
	],
	"related_attack_patterns": [
		"226",
		"31",
		"39"
	],
	"notes": [
		{
			"type": "Relationship",
			"text": "This problem can be primary to many types of weaknesses in web applications. A developer may perform proper validation against URL parameters while assuming that attackers cannot modify cookies. As a result, the program might skip basic input validation to enable cross-site scripting, SQL injection, price tampering, and other attacks.."
		}
	]
}
