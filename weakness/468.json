{
	"id": "468",
	"name": "Incorrect Pointer Scaling",
	"abstraction": "Base",
	"structure": "Simple",
	"status": "Incomplete",
	"description": "In C and C++, one may often accidentally refer to the wrong memory due to the semantics of when math operations are implicitly scaled.",
	"related_weaknesses": [
		{
			"nature": "ChildOf",
			"cweid": "682",
			"view_id": "1000",
			"ordinal": "Primary"
		}
	],
	"applicable_platforms": {
		"language": [
			{
				"prevalence": "Undetermined",
				"name": "C"
			},
			{
				"prevalence": "Undetermined",
				"name": "C++"
			}
		]
	},
	"modes_of_introduction": [
		{
			"phase": "Implementation",
			"note": [
				"Programmers may try to index from a pointer by adding a number of bytes. This is incorrect because C and C++ implicitly scale the operand by the size of the data type."
			]
		}
	],
	"likelihood_of_exploit": "Medium",
	"common_consequences": [
		{
			"scope": [
				"Confidentiality",
				"Integrity"
			],
			"impact": [
				"Read Memory",
				"Modify Memory"
			],
			"note": "Incorrect pointer scaling will often result in buffer overflow conditions. Confidentiality can be compromised if the weakness is in the context of a buffer over-read or under-read."
		}
	],
	"potential_mitigations": [
		{
			"phase": [
				"Architecture and Design"
			],
			"description": [
				"Use a platform with high-level memory abstractions."
			]
		},
		{
			"phase": [
				"Implementation"
			],
			"description": [
				"Always use array indexing instead of direct pointer manipulation."
			]
		},
		{
			"phase": [
				"Architecture and Design"
			],
			"description": [
				"Use technologies for preventing buffer overflows."
			]
		}
	],
	"demonstrative_examples": [
		{
			"demonstrative_example_id": "DX-55",
			"text": "\n               <Intro_Text>This example attempts to calculate the position of the second byte of a pointer.</Intro_Text>\n               <Example_Code Nature=\"Bad\" Language=\"C\">\n                  <xhtml:div>int *p = x;<xhtml:br/>char * second_char = (char *)(p + 1);</xhtml:div>\n               </Example_Code>\n               <Body_Text>In this example, second_char is intended to point to the second byte of p. But, adding 1 to p actually adds sizeof(int) to p, giving a result that is incorrect (3 bytes off on 32-bit platforms). If the resulting memory address is read, this could potentially be an information leak. If it is a write, it could be a security-critical write to unauthorized memory-- whether or not it is a buffer overflow. Note that the above code may also be wrong in other ways, particularly in a little endian environment.</Body_Text>\n            "
		}
	],
	"references": [
		{
			"reference_id": "REF-18",
			"author": [
				"Secure Software, Inc."
			],
			"title": "The CLASP Application Security Process",
			"url": "https://cwe.mitre.org/documents/sources/TheCLASPApplicationSecurityProcess.pdf",
			"publication_year": "2005"
		},
		{
			"section": "Chapter 6, \"Pointer Arithmetic\", Page 277",
			"reference_id": "REF-62",
			"author": [
				"Mark Dowd",
				"John McDonald",
				"Justin Schuh"
			],
			"title": "The Art of Software Security Assessment",
			"publication_year": "2006",
			"publisher": "Addison Wesley",
			"edition": "1st Edition"
		}
	],
	"content_history": {
		"submission": {
			"submission_name": "CLASP",
			"submission_date": "2006-07-19"
		},
		"modification": [
			{
				"modification_name": "Eric Dalci",
				"modification_organization": "Cigital",
				"modification_date": "2008-07-01",
				"modification_comment": "updated Time_of_Introduction"
			},
			{
				"modification_organization": "KDM Analytics",
				"modification_date": "2008-08-01",
				"modification_comment": "added/updated white box definitions"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2008-09-08",
				"modification_comment": "updated Applicable_Platforms, Common_Consequences, Relationships, Other_Notes, Taxonomy_Mappings"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2008-11-24",
				"modification_comment": "updated Relationships, Taxonomy_Mappings"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2009-05-27",
				"modification_comment": "updated Demonstrative_Examples"
			},
			{
				"modification_name": "KDM Analytics",
				"modification_date": "2009-07-17",
				"modification_comment": "Improved the White_Box_Definition"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2009-07-27",
				"modification_comment": "updated White_Box_Definitions"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2009-10-29",
				"modification_comment": "updated Common_Consequences"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2011-06-01",
				"modification_comment": "updated Common_Consequences"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2011-06-27",
				"modification_comment": "updated Common_Consequences"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2012-05-11",
				"modification_comment": "updated Demonstrative_Examples, References, Relationships"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2012-10-30",
				"modification_comment": "updated Potential_Mitigations"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2014-06-23",
				"modification_comment": "updated Modes_of_Introduction, Other_Notes"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2014-07-30",
				"modification_comment": "updated Relationships, Taxonomy_Mappings"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2017-11-08",
				"modification_comment": "updated Relationships, Taxonomy_Mappings, White_Box_Definitions"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2019-01-03",
				"modification_comment": "updated Relationships"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2020-02-24",
				"modification_comment": "updated References"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2023-04-27",
				"modification_comment": "updated Relationships"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2023-06-29",
				"modification_comment": "updated Mapping_Notes"
			}
		],
		"previous_entry_name": [
			{
				"text": "Unintentional Pointer Scaling",
				"date": "2008-04-11"
			}
		]
	},
	"taxonomy_mappings": [
		{
			"taxonomy_name": "CLASP",
			"entry_name": "Unintentional pointer scaling"
		},
		{
			"taxonomy_name": "CERT C Secure Coding",
			"entry_name": "Do not add or subtract a scaled integer to a pointer",
			"entry_id": "ARR39-C",
			"mapping_fit": "Exact"
		},
		{
			"taxonomy_name": "CERT C Secure Coding",
			"entry_name": "Ensure pointer arithmetic is used correctly",
			"entry_id": "EXP08-C"
		},
		{
			"taxonomy_name": "Software Fault Patterns",
			"entry_name": "Glitch in computation",
			"entry_id": "SFP1"
		}
	]
}
