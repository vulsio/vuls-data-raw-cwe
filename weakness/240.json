{
	"id": "240",
	"name": "Improper Handling of Inconsistent Structural Elements",
	"abstraction": "Base",
	"structure": "Simple",
	"status": "Draft",
	"description": "The product does not handle or incorrectly handles when two or more structural elements should be consistent, but are not.",
	"related_weaknesses": [
		{
			"nature": "ChildOf",
			"cweid": "237",
			"view_id": "1000",
			"ordinal": "Primary"
		},
		{
			"nature": "ChildOf",
			"cweid": "707",
			"view_id": "1000"
		}
	],
	"applicable_platforms": {
		"language": [
			{
				"class": "Not Language-Specific",
				"prevalence": "Undetermined"
			}
		]
	},
	"modes_of_introduction": [
		{
			"phase": "Implementation"
		}
	],
	"common_consequences": [
		{
			"scope": [
				"Integrity",
				"Other"
			],
			"impact": [
				"Varies by Context",
				"Unexpected State"
			]
		}
	],
	"demonstrative_examples": [
		{
			"demonstrative_example_id": "DX-91",
			"text": "\n               <Intro_Text>In the following C/C++ example the method processMessageFromSocket() will get a message from a socket, placed into a buffer, and will parse the contents of the buffer into a structure that contains the message length and the message body. A for loop is used to copy the message body into a local character string which will be passed to another method for processing.</Intro_Text>\n               <Example_Code Nature=\"Bad\" Language=\"C\">\n                  <xhtml:div>int processMessageFromSocket(int socket) {<xhtml:div style=\"margin-left:1em;\">\n                        <xhtml:div>int success;<xhtml:br/>\n                           <xhtml:br/>char buffer[BUFFER_SIZE];<xhtml:br/>char message[MESSAGE_SIZE];<xhtml:br/>\n                           <xhtml:br/>\n                           <xhtml:i>// get message from socket and store into buffer</xhtml:i>\n                           <xhtml:br/>\n                           <xhtml:br/>\n                           <xhtml:i>//Ignoring possibliity that buffer &gt; BUFFER_SIZE</xhtml:i>\n                           <xhtml:br/>if (getMessage(socket, buffer, BUFFER_SIZE) &gt; 0) {<xhtml:div style=\"margin-left:1em;\">\n                              <xhtml:div>\n                                 <xhtml:br/>\n                                 <xhtml:i>// place contents of the buffer into message structure</xhtml:i>\n                                 <xhtml:br/>ExMessage *msg = recastBuffer(buffer);<xhtml:br/>\n                                 <xhtml:br/>\n                                 <xhtml:i>// copy message body into string for processing</xhtml:i>\n                                 <xhtml:br/>int index;<xhtml:br/>for (index = 0; index &lt; msg-&gt;msgLength; index++) {<xhtml:div style=\"margin-left:1em;\">message[index] = msg-&gt;msgBody[index];</xhtml:div>}<xhtml:br/>message[index] = '\\0';<xhtml:br/>\n                                 <xhtml:br/>\n                                 <xhtml:i>// process message</xhtml:i>\n                                 <xhtml:br/>success = processMessage(message);</xhtml:div>\n                           </xhtml:div>}<xhtml:br/>return success;</xhtml:div>\n                     </xhtml:div>}</xhtml:div>\n               </Example_Code>\n               <Body_Text>However, the message length variable from the structure is used as the condition for ending the for loop without validating that the message length variable accurately reflects the length of the message body (CWE-606). This can result in a buffer over-read (CWE-125) by reading from memory beyond the bounds of the buffer if the message length variable indicates a length that is longer than the size of a message body (CWE-130).</Body_Text>\n            "
		}
	],
	"observed_examples": [
		{
			"reference": "CVE-2014-0160",
			"description": "Chain: \"Heartbleed\" bug receives an inconsistent length parameter (CWE-130) enabling an out-of-bounds read (CWE-126), returning memory that could include private cryptographic keys and other sensitive data.",
			"link": "https://www.cve.org/CVERecord?id=CVE-2014-0160"
		},
		{
			"reference": "CVE-2009-2299",
			"description": "Web application firewall consumes excessive memory when an HTTP request contains a large Content-Length value but no POST data.",
			"link": "https://www.cve.org/CVERecord?id=CVE-2009-2299"
		}
	],
	"content_history": {
		"submission": {
			"submission_name": "PLOVER",
			"submission_date": "2006-07-19"
		},
		"modification": [
			{
				"modification_name": "Eric Dalci",
				"modification_organization": "Cigital",
				"modification_date": "2008-07-01",
				"modification_comment": "updated Time_of_Introduction"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2008-09-08",
				"modification_comment": "updated Relationships, Taxonomy_Mappings"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2009-03-10",
				"modification_comment": "updated Description, Name"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2011-06-01",
				"modification_comment": "updated Common_Consequences"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2011-06-27",
				"modification_comment": "updated Common_Consequences"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2012-05-11",
				"modification_comment": "updated Relationships"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2013-07-17",
				"modification_comment": "updated Type"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2014-07-30",
				"modification_comment": "updated Relationships"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2017-11-08",
				"modification_comment": "updated Applicable_Platforms, Type"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2020-02-24",
				"modification_comment": "updated Relationships"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2023-01-31",
				"modification_comment": "updated Description"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2023-04-27",
				"modification_comment": "updated Relationships, Time_of_Introduction"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2023-06-29",
				"modification_comment": "updated Mapping_Notes"
			},
			{
				"modification_name": "CWE Content Team",
				"modification_organization": "MITRE",
				"modification_date": "2024-02-29",
				"modification_comment": "updated Demonstrative_Examples, Observed_Examples"
			}
		],
		"previous_entry_name": [
			{
				"text": "Inconsistent Elements",
				"date": "2008-04-11"
			},
			{
				"text": "Failure to Resolve Inconsistent Elements",
				"date": "2009-03-10"
			}
		]
	},
	"taxonomy_mappings": [
		{
			"taxonomy_name": "PLOVER",
			"entry_name": "Inconsistent Elements"
		}
	]
}
