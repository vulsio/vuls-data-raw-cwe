{
  "id": "1395",
  "name": "Dependency on Vulnerable Third-Party Component",
  "abstraction": "Class",
  "structure": "Simple",
  "status": "Incomplete",
  "description": "The product has a dependency on a third-party component that contains one or more known vulnerabilities.",
  "extended_description": "\n\t      <xhtml:p>Many products are large enough or complex enough that part of their functionality uses libraries, modules, or other intellectual property developed by third parties who are not the product creator. For example, even an entire operating system might be from a third-party supplier in some hardware products. Whether open or closed source, these components may contain publicly known vulnerabilities that could be exploited by adversaries to compromise the product.</xhtml:p>\n\t    ",
  "related_weaknesses": [
    {
      "nature": "ChildOf",
      "cweid": "657",
      "view_id": "1000",
      "ordinal": "Primary"
    }
  ],
  "applicable_platforms": {
    "language": [
      {
        "class": "Not Language-Specific",
        "prevalence": "Undetermined"
      }
    ],
    "technology": [
      {
        "class": "Not Technology-Specific",
        "prevalence": "Undetermined"
      }
    ],
    "operating_system": [
      {
        "class": "Not OS-Specific",
        "prevalence": "Undetermined"
      }
    ],
    "architecture": [
      {
        "class": "Not Architecture-Specific",
        "prevalence": "Undetermined"
      }
    ]
  },
  "modes_of_introduction": [
    {
      "phase": "Architecture and Design",
      "note": [
        "The product architect or designer might choose a component that is already known to contain vulnerabilities or has a high likelihood of containing vulnerabilities in the future."
      ]
    },
    {
      "phase": "Implementation",
      "note": [
        "For reasons of compatibility or stability, developers might choose a third-party component, such as a library, that is already known to contain vulnerabilities. "
      ]
    },
    {
      "phase": "Patching and Maintenance",
      "note": [
        "Since all products contain vulnerabilities, over time, a third-party component will be discovered to have a vulnerability."
      ]
    }
  ],
  "common_consequences": [
    {
      "scope": [
        "Confidentiality",
        "Integrity",
        "Availability"
      ],
      "impact": [
        "Varies by Context"
      ],
      "note": "The consequences vary widely, depending on the vulnerabilities that exist in the component; how those vulnerabilities can be \"reached\" by adversaries, as the exploitation paths and attack surface will vary depending on how the component is used; and the criticality of the privilege levels and features for which the product relies on the component."
    }
  ],
  "potential_mitigations": [
    {
      "phase": [
        "Requirements",
        "Policy"
      ],
      "description": [
        "In some industries such as healthcare [REF-1320] [REF-1322] or technologies such as the cloud [REF-1321], it might be unclear about who is responsible for applying patches for third-party vulnerabilities: the vendor, the operator/customer, or a separate service. Clarifying roles and responsibilities can be important to minimize confusion or unnecessary delay when third-party vulnerabilities are disclosed."
      ]
    },
    {
      "phase": [
        "Requirements"
      ],
      "description": [
        "Require a Bill of Materials for all components and sub-components of the product. For software, require a Software Bill of Materials (SBOM) [REF-1247] [REF-1311]."
      ]
    },
    {
      "phase": [
        "Architecture and Design",
        "Implementation",
        "Integration",
        "Manufacturing"
      ],
      "description": [
        "Maintain a Bill of Materials for all components and sub-components of the product. For software, maintain a Software Bill of Materials (SBOM). According to [REF-1247], \"An SBOM is a formal, machine-readable inventory of software components and dependencies, information about those components, and their hierarchical relationships.\""
      ]
    },
    {
      "phase": [
        "Operation",
        "Patching and Maintenance"
      ],
      "description": [
        "Actively monitor when a third-party component vendor announces vulnerability patches; fix the third-party component as soon as possible; and make it easy for operators/customers to obtain and apply the patch."
      ]
    },
    {
      "phase": [
        "Operation",
        "Patching and Maintenance"
      ],
      "description": [
        "Continuously monitor changes in each of the product's components, especially when the changes indicate new vulnerabilities, end-of-life (EOL) plans, etc."
      ]
    }
  ],
  "demonstrative_examples": [
    {
      "demonstrative_example_id": "DX-169",
      "text": "\n\t\t<Intro_Text>The \"SweynTooth\" vulnerabilities in Bluetooth Low Energy (BLE) software development kits (SDK) were found to affect multiple Bluetooth System-on-Chip (SoC) manufacturers. These SoCs were used by many products such as medical devices, Smart Home devices, wearables, and other IoT devices. [REF-1314] [REF-1315]</Intro_Text>\n\t      "
    },
    {
      "text": "\n\t\t<Intro_Text>log4j, a Java-based logging framework, is used in a large number of products, with estimates in the range of 3 billion affected devices [REF-1317]. When the \"log4shell\" (CVE-2021-44228) vulnerability was initially announced, it was actively exploited for remote code execution, requiring urgent mitigation in many organizations. However, it was unclear how many products were affected, as Log4j would sometimes be part of a long sequence of transitive dependencies. [REF-1316]</Intro_Text>\n\t      "
    }
  ],
  "references": [
    {
      "reference_id": "REF-1313",
      "author": [
        "Jeff Williams, Arshan Dabirsiaghi"
      ],
      "title": "The Unfortunate Reality of Insecure Libraries",
      "url": "https://owasp.org/www-project-dependency-check/",
      "publication_year": "2014",
      "url_date": "2023-01-25"
    },
    {
      "reference_id": "REF-1212",
      "title": "A06:2021 - Vulnerable and Outdated Components",
      "url": "https://owasp.org/Top10/A06_2021-Vulnerable_and_Outdated_Components/",
      "publication_year": "2021",
      "publication_month": "--09",
      "publication_day": "---24",
      "publisher": "OWASP"
    },
    {
      "reference_id": "REF-1247",
      "author": [
        "NTIA Multistakeholder Process on Software Component Transparency Framing Working Group"
      ],
      "title": "Framing Software Component Transparency: Establishing a Common Software Bill of Materials (SBOM)",
      "url": "https://www.ntia.gov/files/ntia/publications/ntia_sbom_framing_2nd_edition_20211021.pdf",
      "publication_year": "2021",
      "publication_month": "--10",
      "publication_day": "---21"
    },
    {
      "reference_id": "REF-1311",
      "author": [
        "Am√©lie Koran, Wendy Nather, Stewart Scott, Sara Ann Brackett"
      ],
      "title": "The Cases for Using the SBOMs We Build",
      "url": "https://www.atlanticcouncil.org/wp-content/uploads/2022/11/AC_SBOM_IB_v2-002.pdf",
      "publication_year": "2022",
      "publication_month": "--11",
      "url_date": "2023-01-25"
    },
    {
      "reference_id": "REF-1312",
      "author": [
        "OWASP"
      ],
      "title": "OWASP Dependency-Check",
      "url": "https://owasp.org/www-project-dependency-check/",
      "url_date": "2023-01-25"
    },
    {
      "reference_id": "REF-1314",
      "author": [
        "ICS-CERT"
      ],
      "title": "ICS Alert (ICS-ALERT-20-063-01): SweynTooth Vulnerabilities",
      "url": "https://www.cisa.gov/news-events/ics-alerts/ics-alert-20-063-01",
      "publication_year": "2020",
      "publication_month": "--03",
      "publication_day": "---04",
      "url_date": "2023-04-07"
    },
    {
      "reference_id": "REF-1315",
      "author": [
        "Matheus E. Garbelini, Sudipta Chattopadhyay, Chundong Wang, Singapore University of Technology and Design"
      ],
      "title": "Unleashing Mayhem over Bluetooth Low Energy",
      "url": "https://asset-group.github.io/disclosures/sweyntooth/",
      "publication_year": "2020",
      "publication_month": "--03",
      "publication_day": "---04",
      "url_date": "2023-01-25"
    },
    {
      "reference_id": "REF-1316",
      "author": [
        "CISA"
      ],
      "title": "Alert (AA21-356A): Mitigating Log4Shell and Other Log4j-Related Vulnerabilities",
      "url": "https://www.cisa.gov/news-events/cybersecurity-advisories/aa21-356a",
      "publication_year": "2021",
      "publication_month": "--12",
      "publication_day": "---22",
      "url_date": "2023-04-07"
    },
    {
      "reference_id": "REF-1317",
      "author": [
        "SC Media"
      ],
      "title": "What Log4Shell taught us about application security, and how to respond now",
      "url": "https://www.scmagazine.com/resource/application-security/what-log4shell-taught-us-about-appsec-and-how-to-respond",
      "publication_year": "2022",
      "publication_month": "--07",
      "publication_day": "---05",
      "url_date": "2023-01-26"
    },
    {
      "reference_id": "REF-1320",
      "author": [
        "Ali Youssef"
      ],
      "title": "A Framework for a Medical Device Security Program at a Healthcare Delivery Organization",
      "url": "https://array.aami.org/content/news/framework-medical-device-security-program-healthcare-delivery-organization",
      "publication_year": "2022",
      "publication_month": "--08",
      "publication_day": "---08",
      "url_date": "2023-04-07"
    },
    {
      "reference_id": "REF-1321",
      "author": [
        "Cloud Security Alliance"
      ],
      "title": "Shared Responsibility Model Explained",
      "url": "https://cloudsecurityalliance.org/blog/2020/08/26/shared-responsibility-model-explained/",
      "publication_year": "2020",
      "publication_month": "--08",
      "publication_day": "---26",
      "url_date": "2023-01-28"
    },
    {
      "section": "Section 6.1: Medical Device Procurement",
      "reference_id": "REF-1322",
      "author": [
        "Melissa Chase, Steven Christey Coley, Julie Connolly, Ronnie Daldos, Margie Zuk"
      ],
      "title": "Medical Device Cybersecurity Regional Incident Preparedness and Response Playbook",
      "url": "https://www.mitre.org/news-insights/publication/medical-device-cybersecurity-regional-incident-preparedness-and-response",
      "publication_year": "2022",
      "publication_month": "--11",
      "publication_day": "---14",
      "url_date": "2023-01-28"
    }
  ],
  "content_history": {
    "submission": {
      "submission_name": "CWE Content Team",
      "submission_organization": "MITRE",
      "submission_date": "2023-01-25"
    },
    "modification": [
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2023-04-27",
        "modification_comment": "updated References, Relationships"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2023-06-29",
        "modification_comment": "updated Mapping_Notes, Taxonomy_Mappings"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2023-10-26",
        "modification_comment": "updated Demonstrative_Examples"
      }
    ],
    "contribution": [
      {
        "type": "Feedback",
        "contribution_name": "Samreen Arshad",
        "contribution_organization": "Balochistan University of Information Technology, Engineering and Management Sciences",
        "contribution_date": "2022-04-18",
        "contribution_comment": "Submitted a request for coverage of \"Vulnerable and Outdated Components\""
      },
      {
        "type": "Content",
        "contribution_name": "\"Mapping CWE to 62443\" Sub-Working Group",
        "contribution_organization": "CWE-CAPEC ICS/OT SIG",
        "contribution_date": "2023-06-29",
        "contribution_comment": "Suggested mappings to ISA/IEC 62443."
      }
    ]
  },
  "detection_methods": [
    {
      "method": "Automated Analysis",
      "description": "For software, use Software Composition Analysis (SCA) tools, which automatically analyze products to identify third-party dependencies. Often, SCA tools can be used to link with known vulnerabilities in the dependencies that they detect. There are commercial and open-source alternatives, such as OWASP Dependency-Check [REF-1312]. Many languages or frameworks have package managers with similar capabilities, such as npm audit for JavaScript, pip-audit for Python, govulncheck for Go, and many others. Dynamic methods can detect loading of third-party components.",
      "effectiveness": "High",
      "effectiveness_notes": "Software Composition Analysis (SCA) tools face a number of technical challenges that can lead to false positives and false negatives. Dynamic methods have other technical challenges."
    }
  ],
  "taxonomy_mappings": [
    {
      "taxonomy_name": "ISA/IEC 62443",
      "entry_name": "Req CR 2.4",
      "entry_id": "Part 4-2"
    },
    {
      "taxonomy_name": "ISA/IEC 62443",
      "entry_name": "Req CR 6.2",
      "entry_id": "Part 4-2"
    },
    {
      "taxonomy_name": "ISA/IEC 62443",
      "entry_name": "Req CR 7.2",
      "entry_id": "Part 4-2"
    },
    {
      "taxonomy_name": "ISA/IEC 62443",
      "entry_name": "Req SM-9",
      "entry_id": "Part 4-1"
    },
    {
      "taxonomy_name": "ISA/IEC 62443",
      "entry_name": "Req SM-10",
      "entry_id": "Part 4-1"
    },
    {
      "taxonomy_name": "ISA/IEC 62443",
      "entry_name": "Req SR-2",
      "entry_id": "Part 4-1"
    },
    {
      "taxonomy_name": "ISA/IEC 62443",
      "entry_name": "Req DM-1",
      "entry_id": "Part 4-1"
    },
    {
      "taxonomy_name": "ISA/IEC 62443",
      "entry_name": "Req DM-3",
      "entry_id": "Part 4-1"
    },
    {
      "taxonomy_name": "ISA/IEC 62443",
      "entry_name": "Req DM-4",
      "entry_id": "Part 4-1"
    },
    {
      "taxonomy_name": "ISA/IEC 62443",
      "entry_name": "Req SVV-1",
      "entry_id": "Part 4-1"
    },
    {
      "taxonomy_name": "ISA/IEC 62443",
      "entry_name": "Req SVV-3",
      "entry_id": "Part 4-1"
    }
  ]
}
