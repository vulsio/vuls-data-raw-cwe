{
  "id": "738",
  "name": "CERT C Secure Coding Standard (2008) Chapter 5 - Integers (INT)",
  "status": "Obsolete",
  "summary": "Weaknesses in this category are related to the rules and recommendations in the Integers (INT) chapter of the CERT C Secure Coding Standard (2008).",
  "content_history": {
    "submission": {
      "submission_name": "CWE Content Team",
      "submission_organization": "MITRE",
      "submission_date": "2008-11-24"
    },
    "modification": [
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2017-11-08",
        "modification_comment": "updated Description, Name, Relationship_Notes"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2019-01-03",
        "modification_comment": "updated Description, Name, References"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2023-04-27",
        "modification_comment": "updated Mapping_Notes"
      },
      {
        "modification_name": "CWE Content Team",
        "modification_organization": "MITRE",
        "modification_date": "2023-06-29",
        "modification_comment": "updated Mapping_Notes"
      }
    ],
    "previous_entry_name": [
      {
        "text": "CERT C Secure Coding Section 04 - Integers (INT)",
        "date": "2017-11-08"
      },
      {
        "text": "CERT C Secure Coding (2008 Version) Section 04 - Integers (INT)",
        "date": "2019-01-03"
      }
    ]
  },
  "relationships": [
    {
      "cweid": "129",
      "view_id": "734"
    },
    {
      "cweid": "190",
      "view_id": "734"
    },
    {
      "cweid": "192",
      "view_id": "734"
    },
    {
      "cweid": "197",
      "view_id": "734"
    },
    {
      "cweid": "20",
      "view_id": "734"
    },
    {
      "cweid": "369",
      "view_id": "734"
    },
    {
      "cweid": "466",
      "view_id": "734"
    },
    {
      "cweid": "587",
      "view_id": "734"
    },
    {
      "cweid": "606",
      "view_id": "734"
    },
    {
      "cweid": "676",
      "view_id": "734"
    },
    {
      "cweid": "681",
      "view_id": "734"
    },
    {
      "cweid": "682",
      "view_id": "734"
    }
  ],
  "references": [
    {
      "reference_id": "REF-597",
      "author": [
        "Robert C. Seacord"
      ],
      "title": "The CERT C Secure Coding Standard",
      "publication_year": "2008",
      "publication_month": "--10",
      "publication_day": "---14",
      "publisher": "Addison-Wesley Professional",
      "edition": "1st Edition"
    }
  ],
  "notes": [
    {
      "type": "Relationship",
      "text": "\n               <xhtml:p>In the 2008 version of the CERT C Secure Coding standard, the following rules were mapped to the following CWE IDs:</xhtml:p>\n                  <xhtml:ul>\n                     <xhtml:li>CWE-20 INT06-C Use strtol() or a related function to convert a string token to an integer</xhtml:li>\n                     <xhtml:li>CWE-129 INT32-C Ensure that operations on signed integers do not result in overflow</xhtml:li>\n                     <xhtml:li>CWE-190 INT03-C Use a secure integer library</xhtml:li>\n                     <xhtml:li>CWE-190 INT30-C Ensure that unsigned integer operations do not wrap</xhtml:li>\n                     <xhtml:li>CWE-190 INT32-C Ensure that operations on signed integers do not result in overflow</xhtml:li>\n                     <xhtml:li>CWE-190 INT35-C Evaluate integer expressions in a larger size before comparing or assigning to that size</xhtml:li>\n                     <xhtml:li>CWE-192 INT02-C Understand integer conversion rules</xhtml:li>\n                     <xhtml:li>CWE-192 INT05-C Do not use input functions to convert character data if they cannot handle all possible inputs</xhtml:li>\n                     <xhtml:li>CWE-192 INT31-C Ensure that integer conversions do not result in lost or misinterpreted data</xhtml:li>\n                     <xhtml:li>CWE-197 INT02-C Understand integer conversion rules</xhtml:li>\n                     <xhtml:li>CWE-197 INT05-C Do not use input functions to convert character data if they cannot handle all possible inputs</xhtml:li>\n                     <xhtml:li>CWE-197 INT31-C Ensure that integer conversions do not result in lost or misinterpreted data</xhtml:li>\n                     <xhtml:li>CWE-369 INT33-C Ensure that division and modulo operations do not result in divide-by-zero errors</xhtml:li>\n                     <xhtml:li>CWE-466 INT11-C Take care when converting from pointer to integer or integer to pointer</xhtml:li>\n                     <xhtml:li>CWE-587 INT11-C Take care when converting from pointer to integer or integer to pointer</xhtml:li>\n                     <xhtml:li>CWE-606 INT03-C Use a secure integer library</xhtml:li>\n                     <xhtml:li>CWE-676 INT06-C Use strtol() or a related function to convert a string token to an integer</xhtml:li>\n                     <xhtml:li>CWE-681 INT15-C Use intmax_t or uintmax_t for formatted IO on programmer-defined integer types</xhtml:li>\n                     <xhtml:li>CWE-681 INT31-C Ensure that integer conversions do not result in lost or misinterpreted data</xhtml:li>\n                     <xhtml:li>CWE-681 INT35-C Evaluate integer expressions in a larger size before comparing or assigning to that size</xhtml:li>\n                     <xhtml:li>CWE-682 INT07-C Use only explicitly signed or unsigned char type for numeric values</xhtml:li>\n                     <xhtml:li>CWE-682 INT13-C Use bitwise operators only on unsigned operands</xhtml:li>\n                  </xhtml:ul>\n            "
    }
  ]
}
